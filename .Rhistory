summary(data)
data = read.csv("train.csv", header = TRUE)
names(data)
summary(data)
library(arules)
class(Groceries)
library(arules)
library("arulesViz")
install.packages("arulesViz", type = "source")
install.packages("arules", type = "source")
library("arulesViz")
aasd
data
library("arulesViz")
rules <- apriori(titanic.raw)
inspect(rules)
library("arulesViz")
install.packages("arulesViz", type = "source")
install.packages("arules", type = "source")
install.packages("arules", type = "source")
install.packages("arules", type = "source")
options(download.file.method ="wget")
install.packages("arules", type = "source")
install.packages("arules", type = "source")
install.packages("arules", type = "source")
clear
clean
rules <- apriori(titanic)
library(arules)
library(arulesViz)
titanic = read.csv("train.csv", header = TRUE)
titanic<- data.frame(sapply(titanic,as.factor))
rules <- apriori(titanic)
inspect(rules)
library(arules)
library(arulesViz)
titanic = read.csv("train.csv", header = TRUE)
titanic<- data.frame(sapply(titanic,as.factor))
rules <- apriori(titanic)
inspect(rules)
rules <- apriori(titanic,parameter=list(minlen=2, supp=0.005, conf=0.8),appearance=list(rhs=c("Survived=0", "Survived=1"),default="lhs"),control=list(verbose=F))
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted, sparse = FALSE)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules.sorted[!redundant]
plot(rules)
plot(rules)
plot(rules)
library(arules)
plot(rules, method="graph", control=list(type="items"))
